Prac 9.3

steps
>open sts
-new > spring starter project > set > type : Maven >java version : 17
-select > SQL: JDBC API , SPRING DATA JDBC , MYSQL DRIVER 
          WEB : Spring web
-finish
- select on project name > create class > Appconfig 
                                        > Application (run)
                                        > ResultSetExtractorDemoApplication
                                        > ResultSetExtractorDemo
- Create database in mysql cmd > create database emp;
                               > use emp;
                               > CREATE TABLE emp (id int, name varchar(100), age int);
                               > select*from emp;

> ResultSetExtractorDemoApplication.java 

package com.example.demo; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.boot.CommandLineRunner; 
import org.springframework.boot.SpringApplication; 
import org.springframework.boot.autoconfigure.SpringBootApplication; 
import java.util.List; 
@SpringBootApplication 
public class ResultSetExtractorDemoApplication implements CommandLineRunner { @Autowired 
private ResultSetExtractorDemo resultSetExtractorDemo; 
public static void main(String[] args) { 
SpringApplication.run(ResultSetExtractorDemoApplication.class, args); 
} 
@Override 
public void run(String... args) throws Exception { 
// Get all employees 
List<ResultSetExtractorDemo.Employee> employees = 
resultSetExtractorDemo.getAllEmployees(); 
// Print the result 
for (ResultSetExtractorDemo.Employee employee : employees) { 
System.out.println("Employee ID: "+ employee.getId() + ",Name: " + employee.getName()+ ", Age:" + employee.getAge()); 
} 
} 
} 

> ResultSetExtractorDemo.java  
package com.example.demo; 
import org.springframework.beans.factory.annotation.Autowired; 
import org.springframework.jdbc.core.JdbcTemplate; 
import org.springframework.jdbc.core.ResultSetExtractor; 
import org.springframework.stereotype.Service; 
import java.sql.ResultSet; 
import java.sql.SQLException; 
import java.util.ArrayList; 
import java.util.List; 
@Service 
public class ResultSetExtractorDemo { 
@Autowired 
private JdbcTemplate jdbcTemplate; 
public List<Employee> getAllEmployees() { 
String sql = "SELECT id, name, age FROM rohit"; 
return jdbcTemplate.query(sql, new EmployeeResultSetExtractor()); 
} 
// Employee class for representing the result set 
public static class Employee { 
private Long id; 
public void setId(Long id) { 
this.id = id; 

} 
public void setName(String name) { 
this.name = name; 
} 
public void setAge(int age) { 
this.age = age; 
} 
private String name; 
private int age; 
// Constructors, getters, and setters 
// Example: Getter methods 
public Long getId() { 
return id; 
} 
public String getName() { 
return name; 
} 
public int getAge() { 
return age; 
} 
} 
// ResultSetExtractor implementation 
private static class EmployeeResultSetExtractor implements 
ResultSetExtractor<List<Employee>> { 
@Override 
public List<Employee> extractData(ResultSet resultSet) throws SQLException { 
List<Employee> employees = new ArrayList(); 
while (resultSet.next()) { 
Employee employee = new Employee(); 
employee.setId(resultSet.getLong("id")); 
employee.setName(resultSet.getString("name")); 
employee.setAge(resultSet.getInt("age")); 
employees.add(employee); 
} 
return employees; 
} 
} 
} 

>Application.java 
package com.example.demo; 
import org.springframework.boot.SpringApplication; 
import org.springframework.boot.autoconfigure.SpringBootApplication; 
@SpringBootApplication 
public class Application { 
public static void main(String[] args) { 
SpringApplication.run(Application.class, args); 
} 
} 

> Appconfig.java 
package com.example.demo; 
import org.springframework.context.annotation.Bean; 
import org.springframework.context.annotation.Configuration; 
import javax.sql.DataSource; 
import org.springframework.jdbc.core.JdbcTemplate; 
import org.springframework.jdbc.datasource.DriverManagerDataSource; 
@Configuration 
public class Appconfig { 
@Bean 
DataSource dataSource() { 
DriverManagerDataSource dataSource = new DriverManagerDataSource(); dataSource.setDriverClassName("com.mysql.cj.jdbc.Driver"); 
dataSource.setUrl("jdbc:mysql://localhost:3306/emp"); 
dataSource.setUsername("root"); 
dataSource.setPassword("root"); 
return dataSource; 
} 
@Bean 
JdbcTemplate jdbcTemplate(DataSource dataSource) { 
return new JdbcTemplate(dataSource); 
} 
} 

